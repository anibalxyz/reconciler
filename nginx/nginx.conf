user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 60;

  gzip on;
  gzip_types
  text/plain
  text/css
  text/xml
  text/javascript
  application/javascript
  application/x-javascript
  application/xml
  application/xml+rss
  application/json
  application/atom+xml
  image/svg+xml
  font/ttf
  font/otf
  font/woff
  font/woff2
  application/font-woff
  application/font-woff2;

  # Use a short TTL in dev to allow quick DNS updates when containers restart.
  resolver 127.0.0.11 valid=10s;

  # In production, prefer a longer TTL to reduce DNS lookup overhead.
  # resolver 127.0.0.11 valid=5m;

  server {
    listen 80;
    server_name localhost;

    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    location / {
      root /usr/share/nginx/html;
      try_files $uri $uri.html $uri/ =404;
    }

    location /dashboard {
      alias /usr/share/nginx/html/dashboard/;
      try_files $uri $uri/ /dashboard/index.html;
    }

    location /api/ {
      # Using a variable avoids "host not found in upstream" errors when backend is unavailable
      set $backend api:4000;
      # Manually rewrite URI to remove /api prefix because nginx doesn't do this automatically with variables
      rewrite ^/api/(.*)$ /$1 break;
      proxy_pass http://$backend$uri;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Connection "";
      proxy_redirect / /api/;
    }

    location ~* ^/dashboard/assets/ {
      root /usr/share/nginx/html;
      try_files $uri =404;
      add_header Cache-Control "public";
      expires 30d;
    }

    error_page 404 /404.html;

    location = /404.html {
      root /usr/share/nginx/html;
      internal;
    }

    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
      root /usr/share/nginx/html;
      internal;
    }
  }
}