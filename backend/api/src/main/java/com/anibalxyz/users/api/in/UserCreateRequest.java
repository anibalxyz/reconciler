package com.anibalxyz.users.api.in;

import com.anibalxyz.users.application.in.UserUpdatePayload;
import com.anibalxyz.users.domain.Email;
import com.anibalxyz.users.domain.PasswordHash;
import com.anibalxyz.users.domain.User;
import io.javalin.openapi.OpenApiExample;
import io.javalin.openapi.OpenApiRequired;
import io.javalin.openapi.OpenApiStringValidation;

/**
 * Represents the request body for creating a new user.
 *
 * <p>This record serves as a Data Transfer Object (DTO) for incoming POST requests to /users. It
 * implements the {@link UserUpdatePayload} interface, allowing it to be passed to the application
 * service layer. All fields are mandatory for creation.
 *
 * @param name The name of the new user.
 * @param email The email of the new user.
 * @param password The raw (plain-text) password for the new user.
 * @author Generated by AI
 */
public record UserCreateRequest(
    @OpenApiExample("John Doe")
        @OpenApiRequired
        @OpenApiStringValidation(minLength = "1", maxLength = "" + User.NAME_MAX_LENGTH)
        String name,
    @OpenApiExample("john.doe@example.com")
        @OpenApiRequired
        @OpenApiStringValidation(
            format = "email",
            maxLength = "" + Email.MAX_LENGTH,
            pattern = Email.PATTERN)
        String email,
    @OpenApiExample("strong-password-123")
        @OpenApiRequired
        @OpenApiStringValidation(
            minLength = "" + PasswordHash.MIN_LENGTH,
            maxLength = "" + PasswordHash.MAX_LENGTH)
        String password)
    implements UserUpdatePayload {}
