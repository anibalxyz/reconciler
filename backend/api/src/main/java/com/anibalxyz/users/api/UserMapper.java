package com.anibalxyz.users.api;

import com.anibalxyz.users.api.out.UserCreateResponse;
import com.anibalxyz.users.api.out.UserDetailResponse;
import com.anibalxyz.users.domain.User;

/**
 * A utility class for mapping domain {@link User} objects to API response DTOs.
 * <p>
 * This class ensures a clean separation between the domain layer and the API layer
 * by transforming internal domain models into public-facing data structures. This prevents
 * sensitive information (like password hashes) from being exposed in API responses.
 *
 * @author Generated by AI
 */
public class UserMapper {

  /**
   * Private constructor to prevent instantiation of this utility class.
   * @author Generated by AI
   */
  private UserMapper() {}

  /**
   * Maps a {@link User} domain object to a {@link UserDetailResponse} DTO.
   * This response is typically used for GET requests.
   *
   * @param user The user domain object to map.
   * @return A {@link UserDetailResponse} containing public user details.
   * @author Generated by AI
   */
  public static UserDetailResponse toDetailResponse(User user) {
    return new UserDetailResponse(
        user.getId(),
        user.getName(),
        user.getEmail().value(),
        user.getCreatedAt(),
        user.getUpdatedAt());
  }

  /**
   * Maps a {@link User} domain object to a {@link UserCreateResponse} DTO.
   * This response is used after a new user is successfully created.
   *
   * @param user The user domain object to map.
   * @return A {@link UserCreateResponse} containing essential details of the new user.
   * @author Generated by AI
   */
  public static UserCreateResponse toCreateResponse(User user) {
    return new UserCreateResponse(user.getId(), user.getName(), user.getEmail().value());
  }
}
