package com.anibalxyz.users.api.in;

import com.anibalxyz.users.application.in.UserUpdatePayload;

/**
 * Represents the request body for updating a user.
 * <p>
 * This record serves as a Data Transfer Object (DTO) for incoming PUT requests to /users/{id}.
 * It implements the {@link UserUpdatePayload} interface, allowing it to be passed to the
 * application service layer. All fields are optional from a client's perspective.
 *
 * @param name The new name for the user. Can be null.
 * @param email The new email for the user. Can be null.
 * @param password The new password for the user. Can be null.
 * @author Generated by AI
 */
public record UserUpdateRequest(String name, String email, String password)
    implements UserUpdatePayload {
  /**
   * Checks if at least one field in the request is provided and not blank.
   * This is used for request validation to prevent empty update payloads.
   *
   * @return {@code true} if at least one field has a value, {@code false} otherwise.
   * @author Generated by AI
   */
  public boolean hasAtLeastOneField() {
    return (name != null && !name.isBlank())
        || (email != null && !email.isBlank())
        || (password != null && !password.isBlank());
  }
}
