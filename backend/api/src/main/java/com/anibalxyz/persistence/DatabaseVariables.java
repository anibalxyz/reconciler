package com.anibalxyz.persistence;

import org.jetbrains.annotations.NotNull;

/**
 * A record-like class that provides a type-safe representation of database connection variables.
 *
 * <p>This class centralizes access to database settings loaded from the environment, preventing the
 * use of "magic strings" and making the configuration explicit.
 *
 * @author Generated by AI
 */
public class DatabaseVariables {
  public final String url;
  public final String user;
  public final String password;

  /**
   * Private constructor to enforce instantiation via the static factory method.
   *
   * @param url The full JDBC URL.
   * @param user The database username.
   * @param password The database password.
   */
  private DatabaseVariables(String url, String user, String password) {
    this.url = url;
    this.user = user;
    this.password = password;
  }

  /**
   * A factory method to create a {@code DatabaseVariables} instance from individual components.
   *
   * @return A new {@code DatabaseVariables} instance.
   * @throws IllegalStateException if any of the required variables are null.
   */
  public static DatabaseVariables generate(
      String host, String port, String name, String user, String password) {
    if (host == null || name == null || user == null || password == null) {
      throw new IllegalStateException(
          "Missing required database environment variables (DB_HOST, DB_NAME, DB_USER, DB_PASSWORD)");
    }
    String url = "jdbc:postgresql://" + host + ":" + port + "/" + name;

    return new DatabaseVariables(url, user, password);
  }

  /**
   * @return The full JDBC URL for the database connection.
   */
  public String url() {
    return url;
  }

  /**
   * @return The username for the database connection.
   */
  public String user() {
    return user;
  }

  /**
   * @return The password for the database connection.
   */
  public String password() {
    return password;
  }

  /**
   * @return The string representation of the object, masking the password for security.
   */
  @NotNull
  @Override
  public String toString() {
    return "DatabaseVariables[" + "jdbcUrl=" + url + ", " + "user=" + user + ", password=********]";
  }
}
