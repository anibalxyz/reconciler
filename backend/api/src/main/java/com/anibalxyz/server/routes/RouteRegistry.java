package com.anibalxyz.server.routes;

import io.javalin.Javalin;

/**
 * An abstract base class for modular route registration.
 *
 * <p>Classes that extend {@code RouteRegistry} are responsible for defining a set of related API
 * routes (e.g., all routes for the "users" features). This pattern allows the main {@link
 * com.anibalxyz.server.Application} to discover and register all route modules without being
 * tightly coupled to them.
 *
 * @author Generated by AI
 */
public abstract class RouteRegistry {
  protected Javalin server;

  /**
   * Constructs a RouteRegistry.
   *
   * @param server The Javalin instance on which routes will be registered.
   */
  public RouteRegistry(Javalin server) {
    this.server = server;
  }

  /**
   * Defines and registers all routes for this module.
   *
   * <p>Implementations of this method should contain the complete routing logic for a specific
   * features or resource (e.g., all endpoints under "/users"). This is typically done using {@link
   * RouteGroup} to organize endpoints under a common path prefix and map them to controller
   * handlers.
   */
  public abstract void register();
}
