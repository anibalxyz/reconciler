package com.anibalxyz.server.config.modules;

import com.anibalxyz.server.config.modules.definitions.RuntimeConfig;
import com.anibalxyz.server.security.JwtMiddleware;
import io.javalin.Javalin;

/**
 * Configuration module for applying JWT authentication middleware to protected routes.
 *
 * <p>This class extends {@link RuntimeConfig} to register the {@link JwtMiddleware} as a
 * `before` handler for specific paths, ensuring that requests to these paths are authenticated
 * using JWT tokens.
 *
 * @author Generated by AI
 */
public class JwtMiddlewareConfig extends RuntimeConfig {
  private final JwtMiddleware jwtMiddleware;

  /**
   * Constructs a new JwtMiddlewareConfig.
   *
   * @param server The Javalin server instance.
   * @param jwtMiddleware The JWT middleware to apply.
   */
  public JwtMiddlewareConfig(Javalin server, JwtMiddleware jwtMiddleware) {
    super(server);
    this.jwtMiddleware = jwtMiddleware;
  }

  /**
   * {@inheritDoc}
   *
   * <p>Applies the JWT middleware to all routes under /users, protecting them from unauthenticated access.
   */
  @Override
  public void apply() {
    server.before("/users", jwtMiddleware);
  }
}
