package com.anibalxyz.features.auth.domain;

import java.util.Optional;

/**
 * An interface (port) defining the contract for refresh token data persistence.
 *
 * <p>This repository abstracts the data storage mechanism for {@link RefreshToken} domain objects,
 * allowing the application layer to remain independent of the specific persistence technology
 * (e.g., JPA, Redis). It follows the Repository pattern.
 *
 * @author Generated by AI
 */
public interface RefreshTokenRepository {

  /**
   * Saves (creates or updates) a refresh token in the data store.
   *
   * @param refreshToken The refresh token to save.
   * @return The saved refresh token, which may include a generated ID if it's a new token.
   */
  RefreshToken save(RefreshToken refreshToken);

  /**
   * Finds a refresh token by its unique token string.
   *
   * @param token The token string to search for.
   * @return An {@link Optional} containing the refresh token if found, or an empty Optional if not.
   */
  Optional<RefreshToken> findByToken(String token);
}
