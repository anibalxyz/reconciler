package com.anibalxyz.features.auth.api;

import com.anibalxyz.features.auth.api.in.LoginRequest;
import com.anibalxyz.features.auth.api.out.AuthResponse;
import com.anibalxyz.server.dto.ErrorResponse;
import com.anibalxyz.server.openapi.ErrorResponseExamples;
import io.javalin.http.Context;
import io.javalin.openapi.HttpMethod;
import io.javalin.openapi.OpenApi;
import io.javalin.openapi.OpenApiContent;
import io.javalin.openapi.OpenApiRequestBody;
import io.javalin.openapi.OpenApiResponse;

/**
 * Defines the API contract for authentication-related operations.
 *
 * <p>This interface uses {@link OpenApi} annotations to document the REST endpoints, providing a
 * clear specification for authentication functionalities. The {@link AuthController} implements
 * these operations.
 *
 * @author Generated by AI
 */
public interface AuthApi {

  /**
   * Handles POST requests to the /auth/login endpoint.
   *
   * <p>This method authenticates a user using the provided credentials and returns a JWT token
   * upon successful authentication.
   *
   * @param ctx The context for the HTTP request and response.
   */
  @OpenApi(
      summary = "Authenticate user and get JWT token",
      operationId = "login",
      path = "/auth/login",
      methods = HttpMethod.POST,
      tags = {"Authentication"},
      requestBody =
          @OpenApiRequestBody(
              description = "User credentials for login",
              required = true,
              content = @OpenApiContent(from = LoginRequest.class)),
      responses = {
        @OpenApiResponse(
            status = "200",
            description = "Authentication successful, returns JWT token",
            content = @OpenApiContent(from = AuthResponse.class)),
        @OpenApiResponse(
            status = "400",
            description = "Invalid input (e.g., missing email/password)",
            content =
                @OpenApiContent(
                    from = ErrorResponse.class,
                    example = ErrorResponseExamples.CREATE_USER_BAD_REQUEST)),
        @OpenApiResponse(
            status = "401",
            description = "Invalid credentials",
            content =
                @OpenApiContent(
                    from = ErrorResponse.class,
                    example = ErrorResponseExamples.INVALID_CREDENTIALS))
      })
  void login(Context ctx);
}