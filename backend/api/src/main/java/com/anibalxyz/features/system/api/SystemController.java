package com.anibalxyz.features.system.api;

import com.anibalxyz.features.system.api.out.HealthResponse;
import com.anibalxyz.persistence.PersistenceManager;
import io.javalin.http.Context;
import jakarta.persistence.EntityManager;

/**
 * Implements the {@link SystemApi} interface, providing the logic for system-level endpoints.
 *
 * <p>This controller handles operations like health checks.
 *
 * @author Generated by AI
 */
public class SystemController implements SystemApi {

  private final PersistenceManager persistenceManager;

  /**
   * Constructs a new SystemController with a dependency on the {@link PersistenceManager}.
   *
   * @param persistenceManager The manager responsible for database persistence.
   */
  public SystemController(PersistenceManager persistenceManager) {
    this.persistenceManager = persistenceManager;
  }

  /**
   * {@inheritDoc}
   *
   * <p>This implementation checks the database connection by executing a simple query.
   */
  @Override
  public void healthCheck(Context ctx) {
    boolean dbIsConnected;
    try (EntityManager em = persistenceManager.emf().createEntityManager()) {
      em.createNativeQuery("SELECT 1").getSingleResult();
      dbIsConnected = true;
    } catch (Exception e) {
      dbIsConnected = false;
    }
    ctx.json(new HealthResponse(dbIsConnected));
  }
}
