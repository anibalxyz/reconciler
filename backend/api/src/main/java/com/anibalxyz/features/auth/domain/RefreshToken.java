package com.anibalxyz.features.auth.domain;

import com.anibalxyz.features.users.domain.User;
import java.time.Instant;

/**
 * Represents a Refresh Token in the domain.
 *
 * <p>This entity stores the long-lived token used to obtain new access tokens. It is designed as an
 * immutable record, encapsulating the token's state and essential business logic, like checking
 * for expiration.
 *
 * @param id The unique identifier of the refresh token.
 * @param token The unique, randomly generated token string.
 * @param user The user to whom this token belongs.
 * @param expiryDate The date and time when this token expires.
 * @param revoked Whether the token has been revoked.
 * @author Generated by AI
 */
public record RefreshToken(
    Long id, String token, User user, Instant expiryDate, boolean revoked) {

  /**
   * Checks if the refresh token has expired.
   *
   * @return {@code true} if the token's expiry date is in the past, {@code false} otherwise.
   */
  public boolean isExpired() {
    return expiryDate.isBefore(Instant.now());
  }

  /**
   * Creates a new {@code RefreshToken} instance with an updated revoked status.
   *
   * @param revoked The new revoked status.
   * @return A new {@code RefreshToken} instance with the specified revoked status.
   */
  public RefreshToken withRevoked(boolean revoked) {
    return new RefreshToken(id, token, user, expiryDate, revoked);
  }
}
